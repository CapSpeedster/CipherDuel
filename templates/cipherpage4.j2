<html>
<head>
    <link rel="stylesheet" type="text/css" href="/static/cipher.css"/>
    <style>
        :root {
            --color-bg: 240, 240, 245;
            --color-fg: 255, 255, 255;
            --color-selected: 100, 100, 100;
            --color-mine: 126, 27, 27, 0.75;
            --color-navbar: 41, 128, 185;
        }
        div#title {
            position: relative;
            font-size: 40px;
            color: white;
            padding-left: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        div#navbar {
            width: 100%;
            height: 150px;
            border: none;
            background-color: rgb(var(--color-navbar));
            display: flex;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        ul#navlist {
            list-style-type: none;
            display: flex;
            flex-direction: row;
            gap: 20px;
            padding: 20px;
            align-items: center;
            width: 100%;
            margin: 0;
        }

        li#navbutton {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 0.5rem;
            font-size: 1.5rem;
            margin: 0.5rem;
        }
        button {
            background-color: rgb(var(--color-navbar));
            color: rgb(198, 209, 230);
            cursor: pointer;
        }

        button:hover {
            opacity: 0.9;
            transform: translateY(-1px);
        }
        img#avatar {
            position: relative;
            width: 100px;
            height: 100px;
            border-radius: 50%;
            overflow: hidden;
            object-fit: cover;
            border: 3px solid white;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        }
        
        .cipher-container {
            width: 90%;
            max-width: 1200px;
            margin: 2rem auto;
            padding: 2rem;
            background-color: white;
            border-radius: 15px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

        .cipher-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(40px, 1fr));
            gap: 10px;
            justify-items: center;
            max-width: 90%;
            margin: 2rem auto;
            padding: 2rem;
            background-color: rgb(248, 250, 252);
            border-radius: 10px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }

        .cipher-pair {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 8px;
        }

        .cipher-input {
            width: 35px;
            height: 35px;
            text-align: center;
            font-size: 1.2rem;
            border: 2px solid rgb(41, 128, 185);
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .cipher-input:focus {
            outline: none;
            border-color: rgb(52, 152, 219);
            box-shadow: 0 0 0 3px rgba(41, 128, 185, 0.2);
        }

        .cipher-letter {
            font-weight: bold;
            font-size: 1.3rem;
            color: rgb(41, 128, 185);
        }

        #checkbutton {
            margin: 2rem auto;
            text-align: center;
        }

        #checkbutton button {
            padding: 1rem 3rem;
            font-size: 1.2rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 1px;
            background-color: rgb(41, 128, 185);
            color: white;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 2px 4px rgba(41, 128, 185, 0.2);
        }

        #checkbutton button:hover {
            background-color: rgb(52, 152, 219);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(41, 128, 185, 0.3);
        }

        .lobby-code {
            text-align: center;
            font-size: 1.2rem;
            color: rgb(75, 85, 99);
            margin: 1rem 0;
        }

        .lobby-code strong {
            color: rgb(41, 128, 185);
            font-size: 1.4rem;
        }

        #checks {
            text-align: center;
            padding: 1rem;
            margin: 1rem auto;
            max-width: 600px;
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            font-size: 1.2rem;
            color: rgb(41, 128, 185);
        }

        .frequency-section {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
            gap: 1rem;
            padding: 2rem;
            margin: 2rem auto;
            background-color: rgb(248, 250, 252);
            border-radius: 10px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            max-width: 90%;
        }

        .freq-pair {
            display: flex;
            align-items: center;
            gap: 1rem;
            justify-content: center;
        }

        .freq-info {
            font-size: 1.1rem;
            color: rgb(75, 85, 99);
            min-width: 60px;
        }
        .input-grid {
          display: flex;
          flex-direction: column;
          gap: 0.8rem;
          align-items: center;
          justify-content: center;
          margin: 2rem auto;
        }

        .input-row {
          display: grid;
          grid-template-columns: repeat(26, 2.3rem);
          gap: 0.3rem;
        }
    </style>
    <script>
        let startTime = Date.now();

        function updateElapsedTime() {
            let username = document.getElementById('user').textContent;
            let cipherNumbers = document.getElementsByClassName('cipher-letter');
            let itemString = 'time-'+username;
            for (let i = 0; i<17; i++){
                itemString+=cipherNumbers[i].innerText;
            }
            let currentTime = Date.now();
            let elapsedTime=0;
            if (localStorage.getItem(itemString) != null){
                elapsedTime = Math.floor((currentTime - startTime) / 1000) + parseInt(localStorage.getItem(itemString)); 
            }
            else {
                elapsedTime = Math.floor((currentTime - startTime) / 1000); 
            }
            document.getElementById('time-elapsed').textContent = elapsedTime;
        }
        
        setInterval(updateElapsedTime, 1000);
        
        function updateText() {
            let val = event.target.value;
            let name = event.target.name;
            let sameBoxes = document.getElementsByName(name);
            for (let i = 0; i < sameBoxes.length; i++) {
                sameBoxes[i].value = val.toUpperCase();
            }
        }

        function updateRows() {
            let val = event.target.value.toUpperCase();
            event.target.value = val.toUpperCase();
            let name = event.target.name;
            let column = name.substring(2);
            let row = name.substring(0,1);
            let alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

            if (val==''){
                r0 = document.getElementsByName('0_'+column);
                r1 = document.getElementsByName('1_'+column);
                r2 = document.getElementsByName('2_'+column);
                r0[0].value=val;
                r1[0].value=val;
                r2[0].value=val;
            }
            else if (row==0){
                let r1boxes = document.getElementsByName(val);
                let r2boxes = document.getElementsByName(r1boxes[0].value);
                r1 = document.getElementsByName('1_'+column);
                r2 = document.getElementsByName('2_'+column);
                r1[0].value = r1boxes[0].value;
                r2[0].value = r2boxes[0].value;
            }
            else if (row==1){
                let inputs = document.getElementsByTagName("input"),
                    i,
                    len,
                    r0boxes = [],
                    value = val;

                for (i = 0, len = inputs.length; i < len; i++) {
                    if (inputs[i].value === value) {
                        r0boxes.push(inputs[i]);
                    }
                }
                let r2boxes = document.getElementsByName(val);
                r0 = document.getElementsByName('0_'+column);
                r2 = document.getElementsByName('2_'+column);
                if (alphabet.includes(r0boxes[0].name)){
                    r0[0].value = r0boxes[0].name;
                }
                r2[0].value = r2boxes[0].value;
            }
            else if (row == 2){
                let inputs = document.getElementsByTagName("input"),
                    i,
                    len,
                    r0boxes = [],
                    value = val;

                for (i = 0, len = inputs.length; i < len; i++) {
                    if (inputs[i].value === value) {
                        r0boxes.push(inputs[i]);
                    }
                }

                let inputs2 = document.getElementsByTagName("input"),
                    j,
                    length,
                    r1boxes = [],
                    value2 = r0boxes[0].name;

                for (j = 0, length = inputs2.length; j < length; j++) {
                    if (inputs2[j].value === value2) {
                        r1boxes.push(inputs2[j]);
                    }
                }

                r0 = document.getElementsByName('0_'+column);
                r1 = document.getElementsByName('1_'+column);
                if (alphabet.includes(r0boxes[0].name)){
                    r1[0].value = r0boxes[0].name;
                }
                if (alphabet.includes(r1boxes[0].name)){
                    r0[0].value = r1boxes[0].name;
                }
                
            }
        }

        window.onbeforeunload = function() {
            let username = document.getElementById('user').textContent;
            let time = document.getElementById('time-elapsed').textContent
            let cipherNumbers = document.getElementsByClassName('cipher-letter');
            let itemString = 'time-'+username;
            let addedString='';
            for (let i = 0; i<17; i++){
                addedString+=cipherNumbers[i].innerText;
            }
            localStorage.removeItem(itemString+addedString);

            let cipherInputs = document.getElementsByClassName('cipher-input letter');
            for (let i = 0; i<cipherInputs.length; i++){
                localStorage.setItem(cipherInputs[i].name+addedString, cipherInputs[i].value);
            }

            localStorage.setItem(itemString+addedString, time)
            localStorage.setItem('previous-time-nihilist', time);
            
        }

        window.onload = function() {
            let username = document.getElementById('user').textContent;
            let time = document.getElementById('time-elapsed').textContent
            let cipherNumbers = document.getElementsByClassName('cipher-letter');
            let itemString = 'time-'+username;
            let addedString='';
            for (let i = 0; i<17; i++){
                addedString+=cipherNumbers[i].innerText;
            }

            let popup = document.getElementById('checks')
            if (popup.innerText == 'Correct Solution!'){
                localStorage.removeItem(itemString+addedString);
                localStorage.setItem('previous-time-nihilist', time);
            }

            setTimeout(() => {
                const checks = document.getElementById('checks');
                checks.style.display = 'none';
            }, 10000);

            let cipherInputs = document.getElementsByClassName('cipher-input letter');
            for (let i = 0; i<cipherInputs.length; i++){
                cipherInputs[i].value = localStorage.getItem(cipherInputs[i].name+addedString);
            }

            let prevtime = document.getElementById('prevtime');
            prevtime.textContent = localStorage.getItem('previous-time-nihilist');
        }


        
    </script>
</head>
<body>
    <div id="navbar">
            <ul id="navlist">
                <li>
                    <div id="title">
                        <button id="navbutton" onclick="location.href='/profile/{{profile['username']}}'">
                            <img id="avatar" src="/static/avatars/{{profile['avatar']}}">
                            <span id="user">{{profile['username']}}'s Profile</span>
                        </button>
                    </div>
                </li>
                <li>
                    <button id="navbutton" onclick="location.href='/cipherselection'">Ciphers</button>
                </li>
                <li><button onclick="location.href='/logout'">Log Out</button></li>
            </ul>
        </div>
    <form id="code" action="{{ route }}" method="POST">
        <div id="checkbutton" class="cipher-letter">Input Keyword: <input type="text" name="keyword"/></div>
        <div id='grid' class="cipher-grid">
            {% for i in letters %}
                {% if i == ' ' %}
                    <div style="width: 30px;"></div>
                {% else %}
                    <div class="cipher-pair">
                        <div class="cipher-letter">{{ i }}</div>
                        <input type="text" class="cipher-input letter" name="{{ i }}" maxlength="1" oninput="updateText()" />
                    </div>
                {% endif %}
            {% endfor %}
        </div>  
            <div class="frequency-section">
                {% for i in freqDict %}
                    <div class="freq-pair">
                        <span class="freq-info">{{ i }}: {{ freqDict[i] }}</span>
                        <input type="text" class="cipher-input letter" name="{{ i }}" maxlength="1" oninput="updateText()" />
                    </div>
                {% endfor %}
            </div>

            <div class="input-grid">
              {% for row in range(3) %}
                <div class="input-row">
                  {% for col in range(26) %}
                    <input type="text" name="{{ row }}_{{ col }}" maxlength="1" class="cipher-input" oninput="updateRows()"/>
                  {% endfor %}
                </div>
              {% endfor %}
            </div>

            <div id="checkbutton">
                <div>Time: <p id="time-elapsed">0</p></div>
                <button type="submit">Check Solution</button>
            </div>
        </form>

        <div id="checks">
            {% with checks = get_flashed_messages(category_filter=["check"]) %}
                {% if checks %}
                    {% for msg in checks %}
                        {{ msg }} <div>Your time is <span id="prevtime">0</span> seconds.</div>
                    {% endfor %}
                {% endif %}
            {% endwith %}
        </div>
    </div>
</body>
</html>